// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FileUploader renders correctly without any setup 1`] = `
<FileUploader
  defaultConfig={
    Object {
      "fileSizeUnit": "G",
      "fileUploadLimit": 10,
      "maxFileSize": 5,
    }
  }
  locale={
    Object {
      "instructions": "You may add up to [fileUploadLimit] files (max [maxFileSize][fileSizeUnit] each)",
      "sizeExponent": Object {
        "B": 0,
        "G": 3,
        "K": 1,
        "M": 2,
      },
      "sizeUnitText": Object {
        "B": "B",
        "G": "GB",
        "K": "KB",
        "M": "MB",
      },
    }
  }
  overallProgress={0}
  requireFileAccess={false}
>
  <div>
    <h4
      className="sub-title"
    >
      You may add up to 10 files (max 5GB each)
    </h4>
    <FileUploadDropzone
      clearErrors={false}
      locale={
        Object {
          "validation": Object {
            "multiple": Object {
              "fileName": "[numberOfFiles] files ([filenames]) have an invalid file name",
              "fileNameLength": "[numberOfFiles] filenames ([filenames]) are too long",
              "folder": "Invalid files ([filenames])",
              "maxFileSize": "[numberOfFiles] files ([filenames]) are too big",
              "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded.  Files ([filenames]) ignored",
            },
            "single": Object {
              "fileName": "Invalid file name ([filename])",
              "fileNameLength": "Filename ([filename]) is too long",
              "folder": "Invalid file ([filename])",
              "maxFileSize": "File ([filename]) is too big",
              "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded. File ([filename]) ignored",
            },
          },
        }
      }
      maxFiles={10}
      maxSize={5000000000}
      onDropped={[Function]}
      uploadedFiles={Array []}
    >
      <div>
        <div
          className="columns"
          style={
            Object {
              "marginTop": "12px",
            }
          }
        >
          <div
            className="column"
            onKeyPress={[Function]}
            tabIndex="0"
          >
            <Dropzone
              disableClick={false}
              disablePreview={true}
              maxSize={5000000000}
              minSize={0}
              multiple={true}
              onDrop={[Function]}
              preventDropOnDocument={true}
              style={
                Object {
                  "padding": "10px",
                }
              }
            >
              <div
                className=""
                onClick={[Function]}
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                style={
                  Object {
                    "padding": "10px",
                  }
                }
              >
                <FileUploadDropzoneStaticContent>
                  <div
                    className="columns file-instructions"
                  >
                    <div
                      className="column"
                    >
                      <h3>
                        File upload restrictions
                      </h3>
                      <div>
                        Please ensure your files:
                        <ul>
                          <li>
                            begin with a letter and are less than 45 characters long
                          </li>
                          <li>
                            contain only upper and lowercase alphanumeric characters, and underscores
                          </li>
                          <li>
                            have only a single period which precedes the file extension: “.pdf”
                          </li>
                          <li>
                            are uploaded individually and not inside a folder
                          </li>
                        </ul>
                      </div>
                    </div>
                    <div
                      className="column upload-instructions"
                    >
                      <FontIcon
                        className="material-icons"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        <span
                          className="material-icons"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fontSize": 24,
                              "muiPrepared": true,
                              "position": "relative",
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                            }
                          }
                        >
                          cloud_upload
                        </span>
                      </FontIcon>
                      <p>
                        Click here to select files, or drag files into this area to upload
                      </p>
                    </div>
                  </div>
                </FileUploadDropzoneStaticContent>
                <input
                  multiple={true}
                  onChange={[Function]}
                  style={
                    Object {
                      "display": "none",
                    }
                  }
                  type="file"
                />
              </div>
            </Dropzone>
          </div>
        </div>
      </div>
    </FileUploadDropzone>
  </div>
</FileUploader>
`;

exports[`FileUploader renders row for uploaded files 1`] = `
<FileUploader
  defaultConfig={
    Object {
      "fileSizeUnit": "G",
      "fileUploadLimit": 10,
      "maxFileSize": 5,
    }
  }
  locale={
    Object {
      "instructions": "You may add up to [fileUploadLimit] files (max [maxFileSize][fileSizeUnit] each)",
      "sizeExponent": Object {
        "B": 0,
        "G": 3,
        "K": 1,
        "M": 2,
      },
      "sizeUnitText": Object {
        "B": "B",
        "G": "GB",
        "K": "KB",
        "M": "MB",
      },
    }
  }
  overallProgress={0}
  requireFileAccess={false}
>
  <div>
    <h4
      className="sub-title"
    >
      You may add up to 10 files (max 5GB each)
    </h4>
    <FileUploadDropzone
      clearErrors={false}
      locale={
        Object {
          "validation": Object {
            "multiple": Object {
              "fileName": "[numberOfFiles] files ([filenames]) have an invalid file name",
              "fileNameLength": "[numberOfFiles] filenames ([filenames]) are too long",
              "folder": "Invalid files ([filenames])",
              "maxFileSize": "[numberOfFiles] files ([filenames]) are too big",
              "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded.  Files ([filenames]) ignored",
            },
            "single": Object {
              "fileName": "Invalid file name ([filename])",
              "fileNameLength": "Filename ([filename]) is too long",
              "folder": "Invalid file ([filename])",
              "maxFileSize": "File ([filename]) is too big",
              "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded. File ([filename]) ignored",
            },
          },
        }
      }
      maxFiles={10}
      maxSize={5000000000}
      onDropped={[Function]}
      uploadedFiles={Array []}
    >
      <div>
        <div
          className="columns"
          style={
            Object {
              "marginTop": "12px",
            }
          }
        >
          <div
            className="column"
            onKeyPress={[Function]}
            tabIndex="0"
          >
            <Dropzone
              disableClick={false}
              disablePreview={true}
              maxSize={5000000000}
              minSize={0}
              multiple={true}
              onDrop={[Function]}
              preventDropOnDocument={true}
              style={
                Object {
                  "padding": "10px",
                }
              }
            >
              <div
                className=""
                onClick={[Function]}
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                style={
                  Object {
                    "padding": "10px",
                  }
                }
              >
                <FileUploadDropzoneStaticContent>
                  <div
                    className="columns file-instructions"
                  >
                    <div
                      className="column"
                    >
                      <h3>
                        File upload restrictions
                      </h3>
                      <div>
                        Please ensure your files:
                        <ul>
                          <li>
                            begin with a letter and are less than 45 characters long
                          </li>
                          <li>
                            contain only upper and lowercase alphanumeric characters, and underscores
                          </li>
                          <li>
                            have only a single period which precedes the file extension: “.pdf”
                          </li>
                          <li>
                            are uploaded individually and not inside a folder
                          </li>
                        </ul>
                      </div>
                    </div>
                    <div
                      className="column upload-instructions"
                    >
                      <FontIcon
                        className="material-icons"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        <span
                          className="material-icons"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fontSize": 24,
                              "muiPrepared": true,
                              "position": "relative",
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                            }
                          }
                        >
                          cloud_upload
                        </span>
                      </FontIcon>
                      <p>
                        Click here to select files, or drag files into this area to upload
                      </p>
                    </div>
                  </div>
                </FileUploadDropzoneStaticContent>
                <input
                  multiple={true}
                  onChange={[Function]}
                  style={
                    Object {
                      "display": "none",
                    }
                  }
                  type="file"
                />
              </div>
            </Dropzone>
          </div>
        </div>
      </div>
    </FileUploadDropzone>
  </div>
</FileUploader>
`;

exports[`FileUploader renders row for uploaded files 2`] = `
<FileUploader
  defaultConfig={
    Object {
      "fileSizeUnit": "G",
      "fileUploadLimit": 10,
      "maxFileSize": 5,
    }
  }
  locale={
    Object {
      "instructions": "You may add up to [fileUploadLimit] files (max [maxFileSize][fileSizeUnit] each)",
      "sizeExponent": Object {
        "B": 0,
        "G": 3,
        "K": 1,
        "M": 2,
      },
      "sizeUnitText": Object {
        "B": "B",
        "G": "GB",
        "K": "KB",
        "M": "MB",
      },
    }
  }
  overallProgress={0}
  requireFileAccess={false}
>
  <div>
    <h4
      className="sub-title"
    >
      You may add up to 10 files (max 5GB each)
    </h4>
    <FileUploadDropzone
      clearErrors={false}
      locale={
        Object {
          "validation": Object {
            "multiple": Object {
              "fileName": "[numberOfFiles] files ([filenames]) have an invalid file name",
              "fileNameLength": "[numberOfFiles] filenames ([filenames]) are too long",
              "folder": "Invalid files ([filenames])",
              "maxFileSize": "[numberOfFiles] files ([filenames]) are too big",
              "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded.  Files ([filenames]) ignored",
            },
            "single": Object {
              "fileName": "Invalid file name ([filename])",
              "fileNameLength": "Filename ([filename]) is too long",
              "folder": "Invalid file ([filename])",
              "maxFileSize": "File ([filename]) is too big",
              "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded. File ([filename]) ignored",
            },
          },
        }
      }
      maxFiles={10}
      maxSize={5000000000}
      onDropped={[Function]}
      uploadedFiles={
        Array [
          Object {
            "name": "a.txt",
            "size": 100,
          },
          Object {
            "name": "b.txt",
            "size": 100,
          },
        ]
      }
    >
      <div>
        <div
          className="columns"
          style={
            Object {
              "marginTop": "12px",
            }
          }
        >
          <div
            className="column"
            onKeyPress={[Function]}
            tabIndex="0"
          >
            <Dropzone
              disableClick={false}
              disablePreview={true}
              maxSize={5000000000}
              minSize={0}
              multiple={true}
              onDrop={[Function]}
              preventDropOnDocument={true}
              style={
                Object {
                  "padding": "10px",
                }
              }
            >
              <div
                className=""
                onClick={[Function]}
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                style={
                  Object {
                    "padding": "10px",
                  }
                }
              >
                <FileUploadDropzoneStaticContent>
                  <div
                    className="columns file-instructions"
                  >
                    <div
                      className="column"
                    >
                      <h3>
                        File upload restrictions
                      </h3>
                      <div>
                        Please ensure your files:
                        <ul>
                          <li>
                            begin with a letter and are less than 45 characters long
                          </li>
                          <li>
                            contain only upper and lowercase alphanumeric characters, and underscores
                          </li>
                          <li>
                            have only a single period which precedes the file extension: “.pdf”
                          </li>
                          <li>
                            are uploaded individually and not inside a folder
                          </li>
                        </ul>
                      </div>
                    </div>
                    <div
                      className="column upload-instructions"
                    >
                      <FontIcon
                        className="material-icons"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        <span
                          className="material-icons"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fontSize": 24,
                              "muiPrepared": true,
                              "position": "relative",
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                            }
                          }
                        >
                          cloud_upload
                        </span>
                      </FontIcon>
                      <p>
                        Click here to select files, or drag files into this area to upload
                      </p>
                    </div>
                  </div>
                </FileUploadDropzoneStaticContent>
                <input
                  multiple={true}
                  onChange={[Function]}
                  style={
                    Object {
                      "display": "none",
                    }
                  }
                  type="file"
                />
              </div>
            </Dropzone>
          </div>
        </div>
      </div>
    </FileUploadDropzone>
    <FileUploadRowHeader
      locale={
        Object {
          "deleteAllFiles": "Remove all files from the upload queue",
          "deleteAllFilesConfirmation": Object {
            "cancelButtonLabel": "No",
            "confirmButtonLabel": "Yes",
            "confirmationMessage": "Are you sure you want to delete all files?",
            "confirmationTitle": "Delete all",
          },
          "embargoDateColumn": "Embargo release date",
          "fileAccessColumn": "Access conditions",
          "filenameColumn": "Filename",
        }
      }
      onDeleteAll={[Function]}
      requireFileAccess={false}
    >
      <div
        className="columns is-gapless is-mobile uploadedFileHeader datalist datalist-header"
      >
        <ConfirmDialogBox
          hideCancelButton={false}
          locale={
            Object {
              "cancelButtonLabel": "No",
              "confirmButtonLabel": "Yes",
              "confirmationMessage": "Are you sure you want to delete all files?",
              "confirmationTitle": "Delete all",
            }
          }
          onAction={[Function]}
          onRef={[Function]}
        >
          <Dialog
            actions={
              Array [
                <div
                  className="columns dialog-actions ConfirmDialogBox-actions"
              >
                  <div
                      className="column is-hidden-mobile"
                  />
                  <div
                      className="column is-narrow"
                  >
                      <RaisedButton
                          className="ConfirmDialogBox-actions-cancel"
                          disabled={false}
                          fullWidth={true}
                          label="No"
                          labelPosition="after"
                          onTouchTap={[Function]}
                          primary={false}
                          secondary={false}
                      />
                  </div>
                  <div
                      className="column is-narrow"
                  >
                      <RaisedButton
                          className="ConfirmDialogBox-actions-confirm"
                          disabled={false}
                          fullWidth={true}
                          keyboardFocused={true}
                          label="Yes"
                          labelPosition="after"
                          onTouchTap={[Function]}
                          primary={false}
                          secondary={true}
                      />
                  </div>
                  <div
                      className="is-clearfix"
                  />
              </div>,
              ]
            }
            autoDetectWindowHeight={true}
            autoScrollBodyContent={false}
            modal={true}
            open={false}
            repositionOnUpdate={true}
            title="Delete all"
          >
            <RenderToLayer
              open={true}
              render={[Function]}
              useLayerForClickAway={false}
            />
          </Dialog>
        </ConfirmDialogBox>
        <div
          className="column filename datalist-title"
          style={
            Object {
              "textIndent": "12px",
            }
          }
        >
          Filename
        </div>
        <div
          className="column is-narrow buttons datalist-buttons"
        >
          <IconButton
            disableTouchRipple={false}
            disabled={false}
            iconStyle={Object {}}
            onTouchTap={[Function]}
            tooltip="Remove all files from the upload queue"
            tooltipPosition="bottom-center"
            touch={false}
          >
            <EnhancedButton
              centerRipple={true}
              containerElement="button"
              disableTouchRipple={false}
              disabled={false}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseOut={[Function]}
              onTouchStart={[Function]}
              onTouchTap={[Function]}
              style={
                Object {
                  "boxSizing": "border-box",
                  "fontSize": 0,
                  "height": 48,
                  "overflow": "visible",
                  "padding": 12,
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "width": 48,
                }
              }
              tabIndex={0}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onMouseOut={[Function]}
                onTouchStart={[Function]}
                onTouchTap={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "background": "none",
                    "border": 10,
                    "boxSizing": "border-box",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": 0,
                    "fontWeight": "inherit",
                    "height": 48,
                    "margin": 0,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "visible",
                    "padding": 12,
                    "position": "relative",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "verticalAlign": null,
                    "width": 48,
                    "zIndex": 1,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <TouchRipple
                  abortOnScroll={true}
                  centerRipple={true}
                >
                  <div
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchStart={[Function]}
                  >
                    <Tooltip
                      horizontalPosition="center"
                      label="Remove all files from the upload queue"
                      show={false}
                      style={
                        Object {
                          "boxSizing": "border-box",
                        }
                      }
                      touch={false}
                      verticalPosition="bottom"
                    >
                      <div
                        style={
                          Object {
                            "borderRadius": 2,
                            "boxSizing": "border-box",
                            "color": "#ffffff",
                            "fontFamily": "Roboto, sans-serif",
                            "fontSize": "10px",
                            "left": 24,
                            "lineHeight": "22px",
                            "muiPrepared": true,
                            "opacity": 0,
                            "overflow": "hidden",
                            "padding": "0 8px",
                            "position": "absolute",
                            "right": null,
                            "top": -10000,
                            "transition": "top 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, transform 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                            "userSelect": "none",
                            "zIndex": 3000,
                          }
                        }
                      >
                        <div
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": "50%",
                              "left": "50%",
                              "muiPrepared": true,
                              "position": "absolute",
                              "top": 0,
                              "transform": "translate(-50%, -50%)",
                              "transition": "width 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, height 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, backgroundColor 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                            }
                          }
                        />
                        <span
                          style={
                            Object {
                              "muiPrepared": true,
                              "position": "relative",
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          Remove all files from the upload queue
                        </span>
                      </div>
                    </Tooltip>
                    <FontIcon
                      className="material-icons"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={Object {}}
                    >
                      <span
                        className="material-icons"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "display": "inline-block",
                            "fontSize": 24,
                            "muiPrepared": true,
                            "position": "relative",
                            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                            "userSelect": "none",
                          }
                        }
                      >
                        delete_forever
                      </span>
                    </FontIcon>
                  </div>
                </TouchRipple>
              </button>
            </EnhancedButton>
          </IconButton>
        </div>
      </div>
    </FileUploadRowHeader>
    <Connect(FileUploadRow)
      index={0}
      onAttributeChanged={[Function]}
      onDelete={[Function]}
      requireFileAccess={false}
      uploadedFile={
        Object {
          "name": "a.txt",
          "size": 100,
        }
      }
    >
      <FileUploadRow
        dispatch={[Function]}
        index={0}
        locale={
          Object {
            "deleteHint": "Remove this file",
            "deleteRecordConfirmation": Object {
              "cancelButtonLabel": "No",
              "confirmButtonLabel": "Yes",
              "confirmationMessage": "Are you sure you want to remove this file from the uploaded queue?",
              "confirmationTitle": "Delete file",
            },
          }
        }
        onAttributeChanged={[Function]}
        onDelete={[Function]}
        progress={0}
        requireFileAccess={false}
        uploadedFile={
          Object {
            "name": "a.txt",
            "size": 100,
          }
        }
      >
        <div
          className="columns is-gapless is-mobile uploadedFileRow datalist datalist-row"
        >
          <ConfirmDialogBox
            hideCancelButton={false}
            locale={
              Object {
                "cancelButtonLabel": "No",
                "confirmButtonLabel": "Yes",
                "confirmationMessage": "Are you sure you want to remove this file from the uploaded queue?",
                "confirmationTitle": "Delete file",
              }
            }
            onAction={[Function]}
            onRef={[Function]}
          >
            <Dialog
              actions={
                Array [
                  <div
                    className="columns dialog-actions ConfirmDialogBox-actions"
                >
                    <div
                        className="column is-hidden-mobile"
                    />
                    <div
                        className="column is-narrow"
                    >
                        <RaisedButton
                            className="ConfirmDialogBox-actions-cancel"
                            disabled={false}
                            fullWidth={true}
                            label="No"
                            labelPosition="after"
                            onTouchTap={[Function]}
                            primary={false}
                            secondary={false}
                        />
                    </div>
                    <div
                        className="column is-narrow"
                    >
                        <RaisedButton
                            className="ConfirmDialogBox-actions-confirm"
                            disabled={false}
                            fullWidth={true}
                            keyboardFocused={true}
                            label="Yes"
                            labelPosition="after"
                            onTouchTap={[Function]}
                            primary={false}
                            secondary={true}
                        />
                    </div>
                    <div
                        className="is-clearfix"
                    />
                </div>,
                ]
              }
              autoDetectWindowHeight={true}
              autoScrollBodyContent={false}
              modal={true}
              open={false}
              repositionOnUpdate={true}
              title="Delete file"
            >
              <RenderToLayer
                open={true}
                render={[Function]}
                useLayerForClickAway={false}
              />
            </Dialog>
          </ConfirmDialogBox>
          <div
            className="column datalist-text filename"
          >
            <span
              className="filename-label"
            >
              a.txt
            </span>
          </div>
          <div
            className="column is-narrow uploadedFileDelete datalist-buttons"
          >
            <IconButton
              disableTouchRipple={false}
              disabled={false}
              iconStyle={Object {}}
              onTouchTap={[Function]}
              tooltip="Remove this file"
              tooltipPosition="bottom-center"
              touch={false}
            >
              <EnhancedButton
                centerRipple={true}
                containerElement="button"
                disableTouchRipple={false}
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onKeyboardFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onMouseOut={[Function]}
                onTouchStart={[Function]}
                onTouchTap={[Function]}
                style={
                  Object {
                    "boxSizing": "border-box",
                    "fontSize": 0,
                    "height": 48,
                    "overflow": "visible",
                    "padding": 12,
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "width": 48,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <button
                  disabled={false}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseOut={[Function]}
                  onTouchStart={[Function]}
                  onTouchTap={[Function]}
                  style={
                    Object {
                      "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                      "background": "none",
                      "border": 10,
                      "boxSizing": "border-box",
                      "cursor": "pointer",
                      "display": "inline-block",
                      "fontFamily": "Roboto, sans-serif",
                      "fontSize": 0,
                      "fontWeight": "inherit",
                      "height": 48,
                      "margin": 0,
                      "muiPrepared": true,
                      "outline": "none",
                      "overflow": "visible",
                      "padding": 12,
                      "position": "relative",
                      "textDecoration": "none",
                      "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                      "verticalAlign": null,
                      "width": 48,
                      "zIndex": 1,
                    }
                  }
                  tabIndex={0}
                  type="button"
                >
                  <TouchRipple
                    abortOnScroll={true}
                    centerRipple={true}
                  >
                    <div
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                    >
                      <Tooltip
                        horizontalPosition="center"
                        label="Remove this file"
                        show={false}
                        style={
                          Object {
                            "boxSizing": "border-box",
                          }
                        }
                        touch={false}
                        verticalPosition="bottom"
                      >
                        <div
                          style={
                            Object {
                              "borderRadius": 2,
                              "boxSizing": "border-box",
                              "color": "#ffffff",
                              "fontFamily": "Roboto, sans-serif",
                              "fontSize": "10px",
                              "left": 24,
                              "lineHeight": "22px",
                              "muiPrepared": true,
                              "opacity": 0,
                              "overflow": "hidden",
                              "padding": "0 8px",
                              "position": "absolute",
                              "right": null,
                              "top": -10000,
                              "transition": "top 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, transform 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "zIndex": 3000,
                            }
                          }
                        >
                          <div
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": "50%",
                                "left": "50%",
                                "muiPrepared": true,
                                "position": "absolute",
                                "top": 0,
                                "transform": "translate(-50%, -50%)",
                                "transition": "width 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, height 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, backgroundColor 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              }
                            }
                          />
                          <span
                            style={
                              Object {
                                "muiPrepared": true,
                                "position": "relative",
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            Remove this file
                          </span>
                        </div>
                      </Tooltip>
                      <FontIcon
                        className="material-icons deleteIcon"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={Object {}}
                      >
                        <span
                          className="material-icons deleteIcon"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fontSize": 24,
                              "muiPrepared": true,
                              "position": "relative",
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                            }
                          }
                        >
                          delete
                        </span>
                      </FontIcon>
                    </div>
                  </TouchRipple>
                </button>
              </EnhancedButton>
            </IconButton>
          </div>
        </div>
      </FileUploadRow>
    </Connect(FileUploadRow)>
    <Connect(FileUploadRow)
      index={1}
      onAttributeChanged={[Function]}
      onDelete={[Function]}
      requireFileAccess={false}
      uploadedFile={
        Object {
          "name": "b.txt",
          "size": 100,
        }
      }
    >
      <FileUploadRow
        dispatch={[Function]}
        index={1}
        locale={
          Object {
            "deleteHint": "Remove this file",
            "deleteRecordConfirmation": Object {
              "cancelButtonLabel": "No",
              "confirmButtonLabel": "Yes",
              "confirmationMessage": "Are you sure you want to remove this file from the uploaded queue?",
              "confirmationTitle": "Delete file",
            },
          }
        }
        onAttributeChanged={[Function]}
        onDelete={[Function]}
        progress={0}
        requireFileAccess={false}
        uploadedFile={
          Object {
            "name": "b.txt",
            "size": 100,
          }
        }
      >
        <div
          className="columns is-gapless is-mobile uploadedFileRow datalist datalist-row"
        >
          <ConfirmDialogBox
            hideCancelButton={false}
            locale={
              Object {
                "cancelButtonLabel": "No",
                "confirmButtonLabel": "Yes",
                "confirmationMessage": "Are you sure you want to remove this file from the uploaded queue?",
                "confirmationTitle": "Delete file",
              }
            }
            onAction={[Function]}
            onRef={[Function]}
          >
            <Dialog
              actions={
                Array [
                  <div
                    className="columns dialog-actions ConfirmDialogBox-actions"
                >
                    <div
                        className="column is-hidden-mobile"
                    />
                    <div
                        className="column is-narrow"
                    >
                        <RaisedButton
                            className="ConfirmDialogBox-actions-cancel"
                            disabled={false}
                            fullWidth={true}
                            label="No"
                            labelPosition="after"
                            onTouchTap={[Function]}
                            primary={false}
                            secondary={false}
                        />
                    </div>
                    <div
                        className="column is-narrow"
                    >
                        <RaisedButton
                            className="ConfirmDialogBox-actions-confirm"
                            disabled={false}
                            fullWidth={true}
                            keyboardFocused={true}
                            label="Yes"
                            labelPosition="after"
                            onTouchTap={[Function]}
                            primary={false}
                            secondary={true}
                        />
                    </div>
                    <div
                        className="is-clearfix"
                    />
                </div>,
                ]
              }
              autoDetectWindowHeight={true}
              autoScrollBodyContent={false}
              modal={true}
              open={false}
              repositionOnUpdate={true}
              title="Delete file"
            >
              <RenderToLayer
                open={true}
                render={[Function]}
                useLayerForClickAway={false}
              />
            </Dialog>
          </ConfirmDialogBox>
          <div
            className="column datalist-text filename"
          >
            <span
              className="filename-label"
            >
              b.txt
            </span>
          </div>
          <div
            className="column is-narrow uploadedFileDelete datalist-buttons"
          >
            <IconButton
              disableTouchRipple={false}
              disabled={false}
              iconStyle={Object {}}
              onTouchTap={[Function]}
              tooltip="Remove this file"
              tooltipPosition="bottom-center"
              touch={false}
            >
              <EnhancedButton
                centerRipple={true}
                containerElement="button"
                disableTouchRipple={false}
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onKeyboardFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onMouseOut={[Function]}
                onTouchStart={[Function]}
                onTouchTap={[Function]}
                style={
                  Object {
                    "boxSizing": "border-box",
                    "fontSize": 0,
                    "height": 48,
                    "overflow": "visible",
                    "padding": 12,
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "width": 48,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <button
                  disabled={false}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseOut={[Function]}
                  onTouchStart={[Function]}
                  onTouchTap={[Function]}
                  style={
                    Object {
                      "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                      "background": "none",
                      "border": 10,
                      "boxSizing": "border-box",
                      "cursor": "pointer",
                      "display": "inline-block",
                      "fontFamily": "Roboto, sans-serif",
                      "fontSize": 0,
                      "fontWeight": "inherit",
                      "height": 48,
                      "margin": 0,
                      "muiPrepared": true,
                      "outline": "none",
                      "overflow": "visible",
                      "padding": 12,
                      "position": "relative",
                      "textDecoration": "none",
                      "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                      "verticalAlign": null,
                      "width": 48,
                      "zIndex": 1,
                    }
                  }
                  tabIndex={0}
                  type="button"
                >
                  <TouchRipple
                    abortOnScroll={true}
                    centerRipple={true}
                  >
                    <div
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                    >
                      <Tooltip
                        horizontalPosition="center"
                        label="Remove this file"
                        show={false}
                        style={
                          Object {
                            "boxSizing": "border-box",
                          }
                        }
                        touch={false}
                        verticalPosition="bottom"
                      >
                        <div
                          style={
                            Object {
                              "borderRadius": 2,
                              "boxSizing": "border-box",
                              "color": "#ffffff",
                              "fontFamily": "Roboto, sans-serif",
                              "fontSize": "10px",
                              "left": 24,
                              "lineHeight": "22px",
                              "muiPrepared": true,
                              "opacity": 0,
                              "overflow": "hidden",
                              "padding": "0 8px",
                              "position": "absolute",
                              "right": null,
                              "top": -10000,
                              "transition": "top 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, transform 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "zIndex": 3000,
                            }
                          }
                        >
                          <div
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": "50%",
                                "left": "50%",
                                "muiPrepared": true,
                                "position": "absolute",
                                "top": 0,
                                "transform": "translate(-50%, -50%)",
                                "transition": "width 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, height 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, backgroundColor 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              }
                            }
                          />
                          <span
                            style={
                              Object {
                                "muiPrepared": true,
                                "position": "relative",
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            Remove this file
                          </span>
                        </div>
                      </Tooltip>
                      <FontIcon
                        className="material-icons deleteIcon"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={Object {}}
                      >
                        <span
                          className="material-icons deleteIcon"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fontSize": 24,
                              "muiPrepared": true,
                              "position": "relative",
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                            }
                          }
                        >
                          delete
                        </span>
                      </FontIcon>
                    </div>
                  </TouchRipple>
                </button>
              </EnhancedButton>
            </IconButton>
          </div>
        </div>
      </FileUploadRow>
    </Connect(FileUploadRow)>
  </div>
</FileUploader>
`;

exports[`FileUploader renders row for uploaded files 3`] = `
<FileUploader
  defaultConfig={
    Object {
      "fileSizeUnit": "G",
      "fileUploadLimit": 10,
      "maxFileSize": 5,
    }
  }
  locale={
    Object {
      "instructions": "You may add up to [fileUploadLimit] files (max [maxFileSize][fileSizeUnit] each)",
      "sizeExponent": Object {
        "B": 0,
        "G": 3,
        "K": 1,
        "M": 2,
      },
      "sizeUnitText": Object {
        "B": "B",
        "G": "GB",
        "K": "KB",
        "M": "MB",
      },
    }
  }
  overallProgress={0}
  requireFileAccess={false}
>
  <div>
    <h4
      className="sub-title"
    >
      You may add up to 10 files (max 5GB each)
    </h4>
    <FileUploadDropzone
      clearErrors={true}
      locale={
        Object {
          "validation": Object {
            "multiple": Object {
              "fileName": "[numberOfFiles] files ([filenames]) have an invalid file name",
              "fileNameLength": "[numberOfFiles] filenames ([filenames]) are too long",
              "folder": "Invalid files ([filenames])",
              "maxFileSize": "[numberOfFiles] files ([filenames]) are too big",
              "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded.  Files ([filenames]) ignored",
            },
            "single": Object {
              "fileName": "Invalid file name ([filename])",
              "fileNameLength": "Filename ([filename]) is too long",
              "folder": "Invalid file ([filename])",
              "maxFileSize": "File ([filename]) is too big",
              "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded. File ([filename]) ignored",
            },
          },
        }
      }
      maxFiles={10}
      maxSize={5000000000}
      onDropped={[Function]}
      uploadedFiles={
        Array [
          Object {
            "name": "b.txt",
            "size": 100,
          },
        ]
      }
    >
      <div>
        <div
          className="columns"
          style={
            Object {
              "marginTop": "12px",
            }
          }
        >
          <div
            className="column"
            onKeyPress={[Function]}
            tabIndex="0"
          >
            <Dropzone
              disableClick={false}
              disablePreview={true}
              maxSize={5000000000}
              minSize={0}
              multiple={true}
              onDrop={[Function]}
              preventDropOnDocument={true}
              style={
                Object {
                  "padding": "10px",
                }
              }
            >
              <div
                className=""
                onClick={[Function]}
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                style={
                  Object {
                    "padding": "10px",
                  }
                }
              >
                <FileUploadDropzoneStaticContent>
                  <div
                    className="columns file-instructions"
                  >
                    <div
                      className="column"
                    >
                      <h3>
                        File upload restrictions
                      </h3>
                      <div>
                        Please ensure your files:
                        <ul>
                          <li>
                            begin with a letter and are less than 45 characters long
                          </li>
                          <li>
                            contain only upper and lowercase alphanumeric characters, and underscores
                          </li>
                          <li>
                            have only a single period which precedes the file extension: “.pdf”
                          </li>
                          <li>
                            are uploaded individually and not inside a folder
                          </li>
                        </ul>
                      </div>
                    </div>
                    <div
                      className="column upload-instructions"
                    >
                      <FontIcon
                        className="material-icons"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        <span
                          className="material-icons"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fontSize": 24,
                              "muiPrepared": true,
                              "position": "relative",
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                            }
                          }
                        >
                          cloud_upload
                        </span>
                      </FontIcon>
                      <p>
                        Click here to select files, or drag files into this area to upload
                      </p>
                    </div>
                  </div>
                </FileUploadDropzoneStaticContent>
                <input
                  multiple={true}
                  onChange={[Function]}
                  style={
                    Object {
                      "display": "none",
                    }
                  }
                  type="file"
                />
              </div>
            </Dropzone>
          </div>
        </div>
      </div>
    </FileUploadDropzone>
    <FileUploadRowHeader
      locale={
        Object {
          "deleteAllFiles": "Remove all files from the upload queue",
          "deleteAllFilesConfirmation": Object {
            "cancelButtonLabel": "No",
            "confirmButtonLabel": "Yes",
            "confirmationMessage": "Are you sure you want to delete all files?",
            "confirmationTitle": "Delete all",
          },
          "embargoDateColumn": "Embargo release date",
          "fileAccessColumn": "Access conditions",
          "filenameColumn": "Filename",
        }
      }
      onDeleteAll={[Function]}
      requireFileAccess={false}
    >
      <div
        className="columns is-gapless is-mobile uploadedFileHeader datalist datalist-header"
      >
        <ConfirmDialogBox
          hideCancelButton={false}
          locale={
            Object {
              "cancelButtonLabel": "No",
              "confirmButtonLabel": "Yes",
              "confirmationMessage": "Are you sure you want to delete all files?",
              "confirmationTitle": "Delete all",
            }
          }
          onAction={[Function]}
          onRef={[Function]}
        >
          <Dialog
            actions={
              Array [
                <div
                  className="columns dialog-actions ConfirmDialogBox-actions"
              >
                  <div
                      className="column is-hidden-mobile"
                  />
                  <div
                      className="column is-narrow"
                  >
                      <RaisedButton
                          className="ConfirmDialogBox-actions-cancel"
                          disabled={false}
                          fullWidth={true}
                          label="No"
                          labelPosition="after"
                          onTouchTap={[Function]}
                          primary={false}
                          secondary={false}
                      />
                  </div>
                  <div
                      className="column is-narrow"
                  >
                      <RaisedButton
                          className="ConfirmDialogBox-actions-confirm"
                          disabled={false}
                          fullWidth={true}
                          keyboardFocused={true}
                          label="Yes"
                          labelPosition="after"
                          onTouchTap={[Function]}
                          primary={false}
                          secondary={true}
                      />
                  </div>
                  <div
                      className="is-clearfix"
                  />
              </div>,
              ]
            }
            autoDetectWindowHeight={true}
            autoScrollBodyContent={false}
            modal={true}
            open={false}
            repositionOnUpdate={true}
            title="Delete all"
          >
            <RenderToLayer
              open={true}
              render={[Function]}
              useLayerForClickAway={false}
            />
          </Dialog>
        </ConfirmDialogBox>
        <div
          className="column filename datalist-title"
          style={
            Object {
              "textIndent": "12px",
            }
          }
        >
          Filename
        </div>
        <div
          className="column is-narrow buttons datalist-buttons"
        >
          <IconButton
            disableTouchRipple={false}
            disabled={false}
            iconStyle={Object {}}
            onTouchTap={[Function]}
            tooltip="Remove all files from the upload queue"
            tooltipPosition="bottom-center"
            touch={false}
          >
            <EnhancedButton
              centerRipple={true}
              containerElement="button"
              disableTouchRipple={false}
              disabled={false}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseOut={[Function]}
              onTouchStart={[Function]}
              onTouchTap={[Function]}
              style={
                Object {
                  "boxSizing": "border-box",
                  "fontSize": 0,
                  "height": 48,
                  "overflow": "visible",
                  "padding": 12,
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  "width": 48,
                }
              }
              tabIndex={0}
              type="button"
            >
              <button
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onMouseOut={[Function]}
                onTouchStart={[Function]}
                onTouchTap={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "background": "none",
                    "border": 10,
                    "boxSizing": "border-box",
                    "cursor": "pointer",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": 0,
                    "fontWeight": "inherit",
                    "height": 48,
                    "margin": 0,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "visible",
                    "padding": 12,
                    "position": "relative",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "verticalAlign": null,
                    "width": 48,
                    "zIndex": 1,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <TouchRipple
                  abortOnScroll={true}
                  centerRipple={true}
                >
                  <div
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchStart={[Function]}
                  >
                    <Tooltip
                      horizontalPosition="center"
                      label="Remove all files from the upload queue"
                      show={false}
                      style={
                        Object {
                          "boxSizing": "border-box",
                        }
                      }
                      touch={false}
                      verticalPosition="bottom"
                    >
                      <div
                        style={
                          Object {
                            "borderRadius": 2,
                            "boxSizing": "border-box",
                            "color": "#ffffff",
                            "fontFamily": "Roboto, sans-serif",
                            "fontSize": "10px",
                            "left": 24,
                            "lineHeight": "22px",
                            "muiPrepared": true,
                            "opacity": 0,
                            "overflow": "hidden",
                            "padding": "0 8px",
                            "position": "absolute",
                            "right": null,
                            "top": -10000,
                            "transition": "top 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, transform 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                            "userSelect": "none",
                            "zIndex": 3000,
                          }
                        }
                      >
                        <div
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": "50%",
                              "left": "50%",
                              "muiPrepared": true,
                              "position": "absolute",
                              "top": 0,
                              "transform": "translate(-50%, -50%)",
                              "transition": "width 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, height 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, backgroundColor 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                            }
                          }
                        />
                        <span
                          style={
                            Object {
                              "muiPrepared": true,
                              "position": "relative",
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          Remove all files from the upload queue
                        </span>
                      </div>
                    </Tooltip>
                    <FontIcon
                      className="material-icons"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={Object {}}
                    >
                      <span
                        className="material-icons"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={
                          Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "display": "inline-block",
                            "fontSize": 24,
                            "muiPrepared": true,
                            "position": "relative",
                            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                            "userSelect": "none",
                          }
                        }
                      >
                        delete_forever
                      </span>
                    </FontIcon>
                  </div>
                </TouchRipple>
              </button>
            </EnhancedButton>
          </IconButton>
        </div>
      </div>
    </FileUploadRowHeader>
    <Connect(FileUploadRow)
      index={0}
      onAttributeChanged={[Function]}
      onDelete={[Function]}
      requireFileAccess={false}
      uploadedFile={
        Object {
          "name": "b.txt",
          "size": 100,
        }
      }
    >
      <FileUploadRow
        dispatch={[Function]}
        index={0}
        locale={
          Object {
            "deleteHint": "Remove this file",
            "deleteRecordConfirmation": Object {
              "cancelButtonLabel": "No",
              "confirmButtonLabel": "Yes",
              "confirmationMessage": "Are you sure you want to remove this file from the uploaded queue?",
              "confirmationTitle": "Delete file",
            },
          }
        }
        onAttributeChanged={[Function]}
        onDelete={[Function]}
        progress={0}
        requireFileAccess={false}
        uploadedFile={
          Object {
            "name": "b.txt",
            "size": 100,
          }
        }
      >
        <div
          className="columns is-gapless is-mobile uploadedFileRow datalist datalist-row"
        >
          <ConfirmDialogBox
            hideCancelButton={false}
            locale={
              Object {
                "cancelButtonLabel": "No",
                "confirmButtonLabel": "Yes",
                "confirmationMessage": "Are you sure you want to remove this file from the uploaded queue?",
                "confirmationTitle": "Delete file",
              }
            }
            onAction={[Function]}
            onRef={[Function]}
          >
            <Dialog
              actions={
                Array [
                  <div
                    className="columns dialog-actions ConfirmDialogBox-actions"
                >
                    <div
                        className="column is-hidden-mobile"
                    />
                    <div
                        className="column is-narrow"
                    >
                        <RaisedButton
                            className="ConfirmDialogBox-actions-cancel"
                            disabled={false}
                            fullWidth={true}
                            label="No"
                            labelPosition="after"
                            onTouchTap={[Function]}
                            primary={false}
                            secondary={false}
                        />
                    </div>
                    <div
                        className="column is-narrow"
                    >
                        <RaisedButton
                            className="ConfirmDialogBox-actions-confirm"
                            disabled={false}
                            fullWidth={true}
                            keyboardFocused={true}
                            label="Yes"
                            labelPosition="after"
                            onTouchTap={[Function]}
                            primary={false}
                            secondary={true}
                        />
                    </div>
                    <div
                        className="is-clearfix"
                    />
                </div>,
                ]
              }
              autoDetectWindowHeight={true}
              autoScrollBodyContent={false}
              modal={true}
              open={false}
              repositionOnUpdate={true}
              title="Delete file"
            >
              <RenderToLayer
                open={true}
                render={[Function]}
                useLayerForClickAway={false}
              />
            </Dialog>
          </ConfirmDialogBox>
          <div
            className="column datalist-text filename"
          >
            <span
              className="filename-label"
            >
              b.txt
            </span>
          </div>
          <div
            className="column is-narrow uploadedFileDelete datalist-buttons"
          >
            <IconButton
              disableTouchRipple={false}
              disabled={false}
              iconStyle={Object {}}
              onTouchTap={[Function]}
              tooltip="Remove this file"
              tooltipPosition="bottom-center"
              touch={false}
            >
              <EnhancedButton
                centerRipple={true}
                containerElement="button"
                disableTouchRipple={false}
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onKeyboardFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onMouseOut={[Function]}
                onTouchStart={[Function]}
                onTouchTap={[Function]}
                style={
                  Object {
                    "boxSizing": "border-box",
                    "fontSize": 0,
                    "height": 48,
                    "overflow": "visible",
                    "padding": 12,
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "width": 48,
                  }
                }
                tabIndex={0}
                type="button"
              >
                <button
                  disabled={false}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseOut={[Function]}
                  onTouchStart={[Function]}
                  onTouchTap={[Function]}
                  style={
                    Object {
                      "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                      "background": "none",
                      "border": 10,
                      "boxSizing": "border-box",
                      "cursor": "pointer",
                      "display": "inline-block",
                      "fontFamily": "Roboto, sans-serif",
                      "fontSize": 0,
                      "fontWeight": "inherit",
                      "height": 48,
                      "margin": 0,
                      "muiPrepared": true,
                      "outline": "none",
                      "overflow": "visible",
                      "padding": 12,
                      "position": "relative",
                      "textDecoration": "none",
                      "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                      "verticalAlign": null,
                      "width": 48,
                      "zIndex": 1,
                    }
                  }
                  tabIndex={0}
                  type="button"
                >
                  <TouchRipple
                    abortOnScroll={true}
                    centerRipple={true}
                  >
                    <div
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                    >
                      <Tooltip
                        horizontalPosition="center"
                        label="Remove this file"
                        show={false}
                        style={
                          Object {
                            "boxSizing": "border-box",
                          }
                        }
                        touch={false}
                        verticalPosition="bottom"
                      >
                        <div
                          style={
                            Object {
                              "borderRadius": 2,
                              "boxSizing": "border-box",
                              "color": "#ffffff",
                              "fontFamily": "Roboto, sans-serif",
                              "fontSize": "10px",
                              "left": 24,
                              "lineHeight": "22px",
                              "muiPrepared": true,
                              "opacity": 0,
                              "overflow": "hidden",
                              "padding": "0 8px",
                              "position": "absolute",
                              "right": null,
                              "top": -10000,
                              "transition": "top 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, transform 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                              "zIndex": 3000,
                            }
                          }
                        >
                          <div
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": "50%",
                                "left": "50%",
                                "muiPrepared": true,
                                "position": "absolute",
                                "top": 0,
                                "transform": "translate(-50%, -50%)",
                                "transition": "width 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, height 0ms cubic-bezier(0.23, 1, 0.32, 1) 450ms, backgroundColor 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              }
                            }
                          />
                          <span
                            style={
                              Object {
                                "muiPrepared": true,
                                "position": "relative",
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            Remove this file
                          </span>
                        </div>
                      </Tooltip>
                      <FontIcon
                        className="material-icons deleteIcon"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        style={Object {}}
                      >
                        <span
                          className="material-icons deleteIcon"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fontSize": 24,
                              "muiPrepared": true,
                              "position": "relative",
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                            }
                          }
                        >
                          delete
                        </span>
                      </FontIcon>
                    </div>
                  </TouchRipple>
                </button>
              </EnhancedButton>
            </IconButton>
          </div>
        </div>
      </FileUploadRow>
    </Connect(FileUploadRow)>
  </div>
</FileUploader>
`;

exports[`FileUploader renders row for uploaded files 4`] = `
<FileUploader
  defaultConfig={
    Object {
      "fileSizeUnit": "G",
      "fileUploadLimit": 10,
      "maxFileSize": 5,
    }
  }
  locale={
    Object {
      "instructions": "You may add up to [fileUploadLimit] files (max [maxFileSize][fileSizeUnit] each)",
      "sizeExponent": Object {
        "B": 0,
        "G": 3,
        "K": 1,
        "M": 2,
      },
      "sizeUnitText": Object {
        "B": "B",
        "G": "GB",
        "K": "KB",
        "M": "MB",
      },
    }
  }
  overallProgress={0}
  requireFileAccess={false}
>
  <div>
    <h4
      className="sub-title"
    >
      You may add up to 10 files (max 5GB each)
    </h4>
    <FileUploadDropzone
      clearErrors={true}
      locale={
        Object {
          "validation": Object {
            "multiple": Object {
              "fileName": "[numberOfFiles] files ([filenames]) have an invalid file name",
              "fileNameLength": "[numberOfFiles] filenames ([filenames]) are too long",
              "folder": "Invalid files ([filenames])",
              "maxFileSize": "[numberOfFiles] files ([filenames]) are too big",
              "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded.  Files ([filenames]) ignored",
            },
            "single": Object {
              "fileName": "Invalid file name ([filename])",
              "fileNameLength": "Filename ([filename]) is too long",
              "folder": "Invalid file ([filename])",
              "maxFileSize": "File ([filename]) is too big",
              "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded. File ([filename]) ignored",
            },
          },
        }
      }
      maxFiles={10}
      maxSize={5000000000}
      onDropped={[Function]}
      uploadedFiles={Array []}
    >
      <div>
        <div
          className="columns"
          style={
            Object {
              "marginTop": "12px",
            }
          }
        >
          <div
            className="column"
            onKeyPress={[Function]}
            tabIndex="0"
          >
            <Dropzone
              disableClick={false}
              disablePreview={true}
              maxSize={5000000000}
              minSize={0}
              multiple={true}
              onDrop={[Function]}
              preventDropOnDocument={true}
              style={
                Object {
                  "padding": "10px",
                }
              }
            >
              <div
                className=""
                onClick={[Function]}
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                style={
                  Object {
                    "padding": "10px",
                  }
                }
              >
                <FileUploadDropzoneStaticContent>
                  <div
                    className="columns file-instructions"
                  >
                    <div
                      className="column"
                    >
                      <h3>
                        File upload restrictions
                      </h3>
                      <div>
                        Please ensure your files:
                        <ul>
                          <li>
                            begin with a letter and are less than 45 characters long
                          </li>
                          <li>
                            contain only upper and lowercase alphanumeric characters, and underscores
                          </li>
                          <li>
                            have only a single period which precedes the file extension: “.pdf”
                          </li>
                          <li>
                            are uploaded individually and not inside a folder
                          </li>
                        </ul>
                      </div>
                    </div>
                    <div
                      className="column upload-instructions"
                    >
                      <FontIcon
                        className="material-icons"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        <span
                          className="material-icons"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "display": "inline-block",
                              "fontSize": 24,
                              "muiPrepared": true,
                              "position": "relative",
                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                              "userSelect": "none",
                            }
                          }
                        >
                          cloud_upload
                        </span>
                      </FontIcon>
                      <p>
                        Click here to select files, or drag files into this area to upload
                      </p>
                    </div>
                  </div>
                </FileUploadDropzoneStaticContent>
                <input
                  multiple={true}
                  onChange={[Function]}
                  style={
                    Object {
                      "display": "none",
                    }
                  }
                  type="file"
                />
              </div>
            </Dropzone>
          </div>
        </div>
      </div>
    </FileUploadDropzone>
  </div>
</FileUploader>
`;
