// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component FileUploadDropzone should render correctly without any setup 1`] = `
<div>
  <div
    className="columns"
  >
    <div
      className="column"
      onKeyPress={[Function]}
      tabIndex="0"
    >
      <t
        disableClick={false}
        disablePreview={true}
        disabled={false}
        maxSize={1000}
        minSize={0}
        multiple={true}
        onDrop={[Function]}
        preventDropOnDocument={true}
        style={
          Object {
            "padding": "0px",
          }
        }
      >
        <FileUploadDropzoneStaticContent
          txt={
            Object {
              "errorTitle": "Upload Errors",
              "fileUploadInstruction": <p>
                Click here to select files, or drag files into this area to upload
              </p>,
              "fileUploadRestrictionHeading": <h3>
                File upload restrictions
              </h3>,
              "fileUploadRestrictions": <div>
                Please ensure your files:
                <ul>
                  <li>
                    begin with a letter and are less than 45 characters long
                  </li>
                  <li>
                    contain only upper and lowercase alphanumeric characters, and underscores
                  </li>
                  <li>
                    have only a single period which precedes the file extension: “.pdf”
                  </li>
                  <li>
                    are uploaded individually and not inside a folder
                  </li>
                </ul>
              </div>,
              "validation": Object {
                "multiple": Object {
                  "fileName": "[numberOfFiles] files ([filenames]) have an invalid file name",
                  "fileNameLength": "[numberOfFiles] filenames ([filenames]) are too long",
                  "folder": "Invalid files ([filenames])",
                  "maxFileSize": "[numberOfFiles] files ([filenames]) are too big",
                  "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded.  Files ([filenames]) ignored",
                },
                "single": Object {
                  "fileName": "Invalid file name ([filename])",
                  "fileNameLength": "Filename ([filename]) is too long",
                  "folder": "Invalid file ([filename])",
                  "maxFileSize": "File ([filename]) is too big",
                  "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded. File ([filename]) ignored",
                },
              },
            }
          }
        />
      </t>
    </div>
  </div>
</div>
`;

exports[`Component FileUploadDropzone should render files discarding folders 1`] = `
<div>
  <div
    className="columns"
  >
    <div
      className="column"
      onKeyPress={[Function]}
      tabIndex="0"
    >
      <t
        disableClick={false}
        disablePreview={true}
        disabled={false}
        maxSize={1000}
        minSize={0}
        multiple={true}
        onDrop={[Function]}
        preventDropOnDocument={true}
        style={
          Object {
            "padding": "0px",
          }
        }
      >
        <FileUploadDropzoneStaticContent
          txt={
            Object {
              "errorTitle": "Upload Errors",
              "fileUploadInstruction": <p>
                Click here to select files, or drag files into this area to upload
              </p>,
              "fileUploadRestrictionHeading": <h3>
                File upload restrictions
              </h3>,
              "fileUploadRestrictions": <div>
                Please ensure your files:
                <ul>
                  <li>
                    begin with a letter and are less than 45 characters long
                  </li>
                  <li>
                    contain only upper and lowercase alphanumeric characters, and underscores
                  </li>
                  <li>
                    have only a single period which precedes the file extension: “.pdf”
                  </li>
                  <li>
                    are uploaded individually and not inside a folder
                  </li>
                </ul>
              </div>,
              "validation": Object {
                "multiple": Object {
                  "fileName": "[numberOfFiles] files ([filenames]) have an invalid file name",
                  "fileNameLength": "[numberOfFiles] filenames ([filenames]) are too long",
                  "folder": "Invalid files ([filenames])",
                  "maxFileSize": "[numberOfFiles] files ([filenames]) are too big",
                  "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded.  Files ([filenames]) ignored",
                },
                "single": Object {
                  "fileName": "Invalid file name ([filename])",
                  "fileNameLength": "Filename ([filename]) is too long",
                  "folder": "Invalid file ([filename])",
                  "maxFileSize": "File ([filename]) is too big",
                  "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded. File ([filename]) ignored",
                },
              },
            }
          }
        />
      </t>
    </div>
  </div>
</div>
`;

exports[`Component FileUploadDropzone should render files discarding folders 2`] = `
<div>
  <div
    className="columns"
  >
    <div
      className="column"
      onKeyPress={[Function]}
      tabIndex="0"
    >
      <t
        disableClick={false}
        disablePreview={true}
        disabled={false}
        maxSize={1000}
        minSize={0}
        multiple={true}
        onDrop={[Function]}
        preventDropOnDocument={true}
        style={
          Object {
            "padding": "0px",
          }
        }
      >
        <FileUploadDropzoneStaticContent
          txt={
            Object {
              "errorTitle": "Upload Errors",
              "fileUploadInstruction": <p>
                Click here to select files, or drag files into this area to upload
              </p>,
              "fileUploadRestrictionHeading": <h3>
                File upload restrictions
              </h3>,
              "fileUploadRestrictions": <div>
                Please ensure your files:
                <ul>
                  <li>
                    begin with a letter and are less than 45 characters long
                  </li>
                  <li>
                    contain only upper and lowercase alphanumeric characters, and underscores
                  </li>
                  <li>
                    have only a single period which precedes the file extension: “.pdf”
                  </li>
                  <li>
                    are uploaded individually and not inside a folder
                  </li>
                </ul>
              </div>,
              "validation": Object {
                "multiple": Object {
                  "fileName": "[numberOfFiles] files ([filenames]) have an invalid file name",
                  "fileNameLength": "[numberOfFiles] filenames ([filenames]) are too long",
                  "folder": "Invalid files ([filenames])",
                  "maxFileSize": "[numberOfFiles] files ([filenames]) are too big",
                  "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded.  Files ([filenames]) ignored",
                },
                "single": Object {
                  "fileName": "Invalid file name ([filename])",
                  "fileNameLength": "Filename ([filename]) is too long",
                  "folder": "Invalid file ([filename])",
                  "maxFileSize": "File ([filename]) is too big",
                  "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded. File ([filename]) ignored",
                },
              },
            }
          }
        />
      </t>
    </div>
  </div>
  <Alert
    allowDismiss={false}
    message="Invalid file (test); Invalid file name (a.text.txt)"
    title="Upload Errors"
    type="error"
  />
</div>
`;

exports[`Component FileUploadDropzone should render row for uploaded files 1`] = `
<div>
  <div
    className="columns"
  >
    <div
      className="column"
      onKeyPress={[Function]}
      tabIndex="0"
    >
      <t
        disableClick={false}
        disablePreview={true}
        disabled={false}
        maxSize={1000}
        minSize={0}
        multiple={true}
        onDrop={[Function]}
        preventDropOnDocument={true}
        style={
          Object {
            "padding": "0px",
          }
        }
      >
        <FileUploadDropzoneStaticContent
          txt={
            Object {
              "errorTitle": "Upload Errors",
              "fileUploadInstruction": <p>
                Click here to select files, or drag files into this area to upload
              </p>,
              "fileUploadRestrictionHeading": <h3>
                File upload restrictions
              </h3>,
              "fileUploadRestrictions": <div>
                Please ensure your files:
                <ul>
                  <li>
                    begin with a letter and are less than 45 characters long
                  </li>
                  <li>
                    contain only upper and lowercase alphanumeric characters, and underscores
                  </li>
                  <li>
                    have only a single period which precedes the file extension: “.pdf”
                  </li>
                  <li>
                    are uploaded individually and not inside a folder
                  </li>
                </ul>
              </div>,
              "validation": Object {
                "multiple": Object {
                  "fileName": "[numberOfFiles] files ([filenames]) have an invalid file name",
                  "fileNameLength": "[numberOfFiles] filenames ([filenames]) are too long",
                  "folder": "Invalid files ([filenames])",
                  "maxFileSize": "[numberOfFiles] files ([filenames]) are too big",
                  "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded.  Files ([filenames]) ignored",
                },
                "single": Object {
                  "fileName": "Invalid file name ([filename])",
                  "fileNameLength": "Filename ([filename]) is too long",
                  "folder": "Invalid file ([filename])",
                  "maxFileSize": "File ([filename]) is too big",
                  "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded. File ([filename]) ignored",
                },
              },
            }
          }
        />
      </t>
    </div>
  </div>
</div>
`;

exports[`Component FileUploadDropzone should render row for uploaded files 2`] = `
<div>
  <div
    className="columns"
  >
    <div
      className="column"
      onKeyPress={[Function]}
      tabIndex="0"
    >
      <t
        disableClick={false}
        disablePreview={true}
        disabled={false}
        maxSize={1000}
        minSize={0}
        multiple={true}
        onDrop={[Function]}
        preventDropOnDocument={true}
        style={
          Object {
            "padding": "0px",
          }
        }
      >
        <FileUploadDropzoneStaticContent
          txt={
            Object {
              "errorTitle": "Upload Errors",
              "fileUploadInstruction": <p>
                Click here to select files, or drag files into this area to upload
              </p>,
              "fileUploadRestrictionHeading": <h3>
                File upload restrictions
              </h3>,
              "fileUploadRestrictions": <div>
                Please ensure your files:
                <ul>
                  <li>
                    begin with a letter and are less than 45 characters long
                  </li>
                  <li>
                    contain only upper and lowercase alphanumeric characters, and underscores
                  </li>
                  <li>
                    have only a single period which precedes the file extension: “.pdf”
                  </li>
                  <li>
                    are uploaded individually and not inside a folder
                  </li>
                </ul>
              </div>,
              "validation": Object {
                "multiple": Object {
                  "fileName": "[numberOfFiles] files ([filenames]) have an invalid file name",
                  "fileNameLength": "[numberOfFiles] filenames ([filenames]) are too long",
                  "folder": "Invalid files ([filenames])",
                  "maxFileSize": "[numberOfFiles] files ([filenames]) are too big",
                  "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded.  Files ([filenames]) ignored",
                },
                "single": Object {
                  "fileName": "Invalid file name ([filename])",
                  "fileNameLength": "Filename ([filename]) is too long",
                  "folder": "Invalid file ([filename])",
                  "maxFileSize": "File ([filename]) is too big",
                  "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded. File ([filename]) ignored",
                },
              },
            }
          }
        />
      </t>
    </div>
  </div>
  <Alert
    allowDismiss={false}
    message="File (b.txt) is too big; Filename (jalksjflkajsdlkfjasdlkfjalsdfjlkasdjflkajsdfkljasdlfjasljfsajlkdsjflkasdjflkjasdflkj.txt) is too long; 2 files (a.text.txt, a b.txt) have an invalid file name"
    title="Upload Errors"
    type="error"
  />
</div>
`;

exports[`Component FileUploadDropzone should render row for uploaded files 3`] = `
<div>
  <div
    className="columns"
  >
    <div
      className="column"
      onKeyPress={[Function]}
      tabIndex="0"
    >
      <t
        disableClick={false}
        disablePreview={true}
        disabled={false}
        maxSize={1000}
        minSize={0}
        multiple={true}
        onDrop={[Function]}
        preventDropOnDocument={true}
        style={
          Object {
            "padding": "0px",
          }
        }
      >
        <FileUploadDropzoneStaticContent
          txt={
            Object {
              "errorTitle": "Upload Errors",
              "fileUploadInstruction": <p>
                Click here to select files, or drag files into this area to upload
              </p>,
              "fileUploadRestrictionHeading": <h3>
                File upload restrictions
              </h3>,
              "fileUploadRestrictions": <div>
                Please ensure your files:
                <ul>
                  <li>
                    begin with a letter and are less than 45 characters long
                  </li>
                  <li>
                    contain only upper and lowercase alphanumeric characters, and underscores
                  </li>
                  <li>
                    have only a single period which precedes the file extension: “.pdf”
                  </li>
                  <li>
                    are uploaded individually and not inside a folder
                  </li>
                </ul>
              </div>,
              "validation": Object {
                "multiple": Object {
                  "fileName": "[numberOfFiles] files ([filenames]) have an invalid file name",
                  "fileNameLength": "[numberOfFiles] filenames ([filenames]) are too long",
                  "folder": "Invalid files ([filenames])",
                  "maxFileSize": "[numberOfFiles] files ([filenames]) are too big",
                  "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded.  Files ([filenames]) ignored",
                },
                "single": Object {
                  "fileName": "Invalid file name ([filename])",
                  "fileNameLength": "Filename ([filename]) is too long",
                  "folder": "Invalid file ([filename])",
                  "maxFileSize": "File ([filename]) is too big",
                  "maxFiles": "Only [maxNumberOfFiles] files are allowed to be uploaded. File ([filename]) ignored",
                },
              },
            }
          }
        />
      </t>
    </div>
  </div>
  <Alert
    allowDismiss={false}
    message="Only 3 files are allowed to be uploaded.  Files (c.txt, d.txt) ignored"
    title="Upload Errors"
    type="error"
  />
</div>
`;
